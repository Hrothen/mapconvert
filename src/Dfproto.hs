{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
module Dfproto (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".dfproto\", haskellPrefix = [], parentModule = [], baseName = MName \"Dfproto\"}, protoFilePath = [\"Dfproto.hs\"], protoSource = \"src/Proto/Tile.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".dfproto.Tile\", haskellPrefix = [], parentModule = [MName \"Dfproto\"], baseName = MName \"Tile\"}, descFilePath = [\"Dfproto\",\"Tile.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.x\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"x\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.y\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"y\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.type\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"type'\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".dfproto.Tile.TileType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"TileType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.tile_material\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"tile_material\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".dfproto.Tile.TileMaterialType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"TileMaterialType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.material_index\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"material_index\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.material_type\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"material_type\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.liquid_type\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"liquid_type\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".dfproto.Tile.LiquidType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"LiquidType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".dfproto.Tile.flow_size\", haskellPrefix' = [], parentModule' = [MName \"Dfproto\",MName \"Tile\"], baseName' = FName \"flow_size\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".dfproto.Tile.TileType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"TileType\"}, enumFilePath = [\"Dfproto\",\"Tile\",\"TileType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"EMPTY\"),(EnumCode {getEnumCode = 1},\"FLOOR\"),(EnumCode {getEnumCode = 2},\"BOULDER\"),(EnumCode {getEnumCode = 3},\"PEBBLES\"),(EnumCode {getEnumCode = 4},\"WALL\"),(EnumCode {getEnumCode = 5},\"FORTIFICATION\"),(EnumCode {getEnumCode = 6},\"STAIR_UP\"),(EnumCode {getEnumCode = 7},\"STAIR_DOWN\"),(EnumCode {getEnumCode = 8},\"STAIR_UPDOWN\"),(EnumCode {getEnumCode = 9},\"RAMP\"),(EnumCode {getEnumCode = 10},\"RAMP_TOP\"),(EnumCode {getEnumCode = 11},\"BROOK_BED\"),(EnumCode {getEnumCode = 12},\"BROOK_TOP\"),(EnumCode {getEnumCode = 13},\"TREE\"),(EnumCode {getEnumCode = 14},\"SAPLING\"),(EnumCode {getEnumCode = 15},\"SHRUB\"),(EnumCode {getEnumCode = 16},\"ENDLESS_PIT\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".dfproto.Tile.LiquidType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"LiquidType\"}, enumFilePath = [\"Dfproto\",\"Tile\",\"LiquidType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"WATER\"),(EnumCode {getEnumCode = 1},\"MAGMA\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".dfproto.Tile.TileMaterialType\", haskellPrefix = [], parentModule = [MName \"Dfproto\",MName \"Tile\"], baseName = MName \"TileMaterialType\"}, enumFilePath = [\"Dfproto\",\"Tile\",\"TileMaterialType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"AIR\"),(EnumCode {getEnumCode = 1},\"SOIL\"),(EnumCode {getEnumCode = 2},\"STONE\"),(EnumCode {getEnumCode = 3},\"FEATURE\"),(EnumCode {getEnumCode = 4},\"LAVA_STONE\"),(EnumCode {getEnumCode = 5},\"MINERAL\"),(EnumCode {getEnumCode = 6},\"FROZEN_LIQUID\"),(EnumCode {getEnumCode = 7},\"CONSTRUCTION\"),(EnumCode {getEnumCode = 8},\"GRASS_LIGHT\"),(EnumCode {getEnumCode = 9},\"GRASS_DARK\"),(EnumCode {getEnumCode = 10},\"GRASS_DRY\"),(EnumCode {getEnumCode = 11},\"GRASS_DEAD\"),(EnumCode {getEnumCode = 12},\"HFS\"),(EnumCode {getEnumCode = 13},\"CAMPFIRE\"),(EnumCode {getEnumCode = 14},\"FIRE\"),(EnumCode {getEnumCode = 15},\"ASHES\"),(EnumCode {getEnumCode = 16},\"MAGMA_TYPE\"),(EnumCode {getEnumCode = 17},\"DRIFTWOOD\"),(EnumCode {getEnumCode = 18},\"POOL\"),(EnumCode {getEnumCode = 19},\"BROOK\"),(EnumCode {getEnumCode = 20},\"RIVER\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\226\ACK\n\DC4src/Proto/Tile.proto\DC2\adfproto\"\174\ACK\n\EOTTile\DC2\t\n\SOHx\CAN\SOH \STX(\r\DC2\t\n\SOHy\CAN\STX \STX(\r\DC2$\n\EOTtype\CAN\ETX \STX(\SO2\SYN.dfproto.Tile.TileType\DC25\n\rtile_material\CAN\EOT \SOH(\SO2\RS.dfproto.Tile.TileMaterialType\DC2\SYN\n\SOmaterial_index\CAN\ENQ \SOH(\r\DC2\NAK\n\rmaterial_type\CAN\ACK \SOH(\r\DC2-\n\vliquid_type\CAN\a \SOH(\SO2\CAN.dfproto.Tile.LiquidType\DC2\DC1\n\tflow_size\CAN\b \SOH(\r\"\240\SOH\n\bTileType\DC2\t\n\ENQEMPTY\DLE\NUL\DC2\t\n\ENQFLOOR\DLE\SOH\DC2\v\n\aBOULDER\DLE\STX\DC2\v\n\aPEBBLES\DLE\ETX\DC2\b\n\EOTWALL\DLE\EOT\DC2\DC1\n\rFORTIFICATION\DLE\ENQ\DC2\f\n\bSTAIR_UP\DLE\ACK\DC2\SO\n\nSTAIR_DOWN\DLE\a\DC2\DLE\n\fSTAIR_UPDOWN\DLE\b\DC2\b\n\EOTRAMP\DLE\t\DC2\f\n\bRAMP_TOP\DLE\n\DC2\r\n\tBROOK_BED\DLE\v\DC2\r\n\tBROOK_TOP\DLE\f\DC2\b\n\EOTTREE\DLE\r\DC2\v\n\aSAPLING\DLE\SO\DC2\t\n\ENQSHRUB\DLE\SI\DC2\SI\n\vENDLESS_PIT\DLE\DLE\"\"\n\nLiquidType\DC2\t\n\ENQWATER\DLE\NUL\DC2\t\n\ENQMAGMA\DLE\SOH\"\170\STX\n\DLETileMaterialType\DC2\a\n\ETXAIR\DLE\NUL\DC2\b\n\EOTSOIL\DLE\SOH\DC2\t\n\ENQSTONE\DLE\STX\DC2\v\n\aFEATURE\DLE\ETX\DC2\SO\n\nLAVA_STONE\DLE\EOT\DC2\v\n\aMINERAL\DLE\ENQ\DC2\DC1\n\rFROZEN_LIQUID\DLE\ACK\DC2\DLE\n\fCONSTRUCTION\DLE\a\DC2\SI\n\vGRASS_LIGHT\DLE\b\DC2\SO\n\nGRASS_DARK\DLE\t\DC2\r\n\tGRASS_DRY\DLE\n\DC2\SO\n\nGRASS_DEAD\DLE\v\DC2\a\n\ETXHFS\DLE\f\DC2\f\n\bCAMPFIRE\DLE\r\DC2\b\n\EOTFIRE\DLE\SO\DC2\t\n\ENQASHES\DLE\SI\DC2\SO\n\nMAGMA_TYPE\DLE\DLE\DC2\r\n\tDRIFTWOOD\DLE\DC1\DC2\b\n\EOTPOOL\DLE\DC2\DC2\t\n\ENQBROOK\DLE\DC3\DC2\t\n\ENQRIVER\DLE\DC4B\DLEH\ETXP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL")